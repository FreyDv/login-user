// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type Options,
} from '@hey-api/client-axios';
import type {
  AppControllerGetHelloError,
  AppControllerGetHelloResponse,
  AuthControllerRegisterData,
  AuthControllerRegisterError,
  AuthControllerRegisterResponse,
  AuthControllerLoginData,
  AuthControllerLoginError,
  AuthControllerLoginResponse,
  UserControllerFindOneData,
  UserControllerFindOneError,
  UserControllerFindOneResponse,
  UserControllerUpdateData,
  UserControllerUpdateError,
  UserControllerUpdateResponse,
  UserControllerRemoveData,
  UserControllerRemoveError,
  UserControllerRemoveResponse,
} from './types.gen';

export const client = createClient(createConfig());

export class InternalServerControllerService {
  public static appControllerGetHello<ThrowOnError extends boolean = false>(
    options?: Options<unknown, ThrowOnError>,
  ) {
    return (options?.client ?? client).get<
      AppControllerGetHelloResponse,
      AppControllerGetHelloError,
      ThrowOnError
    >({
      ...options,
      url: '/api/ping',
    });
  }
}

export class AuthService {
  /**
   * Register new User
   */
  public static authControllerRegister<ThrowOnError extends boolean = false>(
    options: Options<AuthControllerRegisterData, ThrowOnError>,
  ) {
    return (options?.client ?? client).post<
      AuthControllerRegisterResponse,
      AuthControllerRegisterError,
      ThrowOnError
    >({
      ...options,
      url: '/api/auth/sign-up',
    });
  }

  /**
   * Enter to site using email and password
   */
  public static authControllerLogin<ThrowOnError extends boolean = false>(
    options: Options<AuthControllerLoginData, ThrowOnError>,
  ) {
    return (options?.client ?? client).post<
      AuthControllerLoginResponse,
      AuthControllerLoginError,
      ThrowOnError
    >({
      ...options,
      url: '/api/auth/sign-in',
    });
  }
}

export class UsersService {
  /**
   * Find user by id
   */
  public static userControllerFindOne<ThrowOnError extends boolean = false>(
    options: Options<UserControllerFindOneData, ThrowOnError>,
  ) {
    return (options?.client ?? client).get<
      UserControllerFindOneResponse,
      UserControllerFindOneError,
      ThrowOnError
    >({
      ...options,
      url: '/api/user/{id}',
    });
  }

  /**
   * Update user
   */
  public static userControllerUpdate<ThrowOnError extends boolean = false>(
    options: Options<UserControllerUpdateData, ThrowOnError>,
  ) {
    return (options?.client ?? client).patch<
      UserControllerUpdateResponse,
      UserControllerUpdateError,
      ThrowOnError
    >({
      ...options,
      url: '/api/user/{id}',
    });
  }

  /**
   * Delete user
   */
  public static userControllerRemove<ThrowOnError extends boolean = false>(
    options: Options<UserControllerRemoveData, ThrowOnError>,
  ) {
    return (options?.client ?? client).delete<
      UserControllerRemoveResponse,
      UserControllerRemoveError,
      ThrowOnError
    >({
      ...options,
      url: '/api/user/{id}',
    });
  }
}
